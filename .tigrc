# 横分割を強制
set vertical-split = no

# generic view
bind generic S none
bind generic ` @bash -c "echo -n '%(commit)' | pbcopy" # copy selected commit hash

# main view: 主にcommitに対しての操作をする
# -I: rebaseの "-i" オプションから
# -F: commitの "--fixup" オプションから
bind main ! ?git revert %(commit)
bind main I ?git rebase -i %(commit)
bind main F ?git commit --fixup %(commit)

# status view: 作業中のメインview. 最も多く利用する
bind status P ?git push %(remote) %(repo:head)
bind status <Ctrl-p> ?git push --force-with-lease %(remote) %(repo:head)
bind status + !git commit --amend
bind status E !git commit --allow-empty
bind status <LessThan> ?git reset --soft HEAD^ # LessThan: <
bind status <Ctrl-r> ?gh pr create --web --assignee "@me"
bind status X ?git clean -df
bind status Z !sh -c 'echo "[git checkout .] Modified files to be discarded:" && git diff --name-only && echo "Discard ALL changes? (y/N):" && read ans && [ "$ans" = "y" ] && git checkout .'

# refs view: 主にbranchに対しての操作をする
bind refs d ?git branch -d %(branch)
bind refs D ?git branch -D %(branch)
bind refs B ?git checkout -b "%(prompt Enter branch name: )" %(branch)
bind refs F ?git fetch --prune
bind refs p ?git pull %(remote) %(repo:head)
bind refs M ?git merge %(branch)
bind refs + ?git rebase %(branch)

# stash view
# - S: stashのS. このためにgenericに割り当てられた `S` を無効化した
# - U: `-u(--include-untracked)` のU
# - P: popのP
bind stash S !git stash push
bind stash U !git stash push -u
bind stash P !git stash pop %(stash)

# カーソル行の色を変更
# [文字色] [背景色] [属性]
color cursor black yellow bold

# -- MEMO --
#
# user-defined command の先頭の記号について
# - !: 通常のコマンド実行
# - ?: コマンド実行前に実行内容を確認
# - @: バックグラウンド実行する. 出力は捨てる
# - +: コマンドを同期実行し、結果の1行目をステータスラインに出力
#
# tig内部の変数について
# - %(branch): The currently selected branch name.
# - %(remote): The currently selected remote name. For remote branches %(branch) will contain the branch name.
# - %(repo:head): The name of the checked out branch.
#
# https://jonas.github.io/tig/doc/tigrc.5.html
